{"ast":null,"code":"import { processRequest as defaultProcessRequest } from './processRequest';\nexport const graphqlUploadExpress = ({\n  processRequest = defaultProcessRequest,\n  ...processRequestOptions\n} = {}) => (request, response, next) => {\n  if (!request.is('multipart/form-data')) return next();\n  const finished = new Promise(resolve => request.on('end', resolve));\n  const {\n    send\n  } = response;\n\n  response.send = (...args) => {\n    finished.then(() => {\n      response.send = send;\n      response.send(...args);\n    });\n  };\n\n  processRequest(request, response, processRequestOptions).then(body => {\n    request.body = body;\n    next();\n  }).catch(error => {\n    if (error.status && error.expose) response.status(error.status);\n    next(error);\n  });\n};","map":{"version":3,"sources":["/Users/josephdeguzman/Documents/CSE/brainiac-app/node_modules/@apollographql/graphql-upload-8-fork/lib/graphqlUploadExpress.mjs"],"names":["processRequest","defaultProcessRequest","graphqlUploadExpress","processRequestOptions","request","response","next","is","finished","Promise","resolve","on","send","args","then","body","catch","error","status","expose"],"mappings":"AAAA,SAASA,cAAc,IAAIC,qBAA3B,QAAwD,kBAAxD;AACA,OAAO,MAAMC,oBAAoB,GAAG,CAAC;AACnCF,EAAAA,cAAc,GAAGC,qBADkB;AAEnC,KAAGE;AAFgC,IAGjC,EAHgC,KAGzB,CAACC,OAAD,EAAUC,QAAV,EAAoBC,IAApB,KAA6B;AACtC,MAAI,CAACF,OAAO,CAACG,EAAR,CAAW,qBAAX,CAAL,EAAwC,OAAOD,IAAI,EAAX;AACxC,QAAME,QAAQ,GAAG,IAAIC,OAAJ,CAAYC,OAAO,IAAIN,OAAO,CAACO,EAAR,CAAW,KAAX,EAAkBD,OAAlB,CAAvB,CAAjB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWP,QAAjB;;AAEAA,EAAAA,QAAQ,CAACO,IAAT,GAAgB,CAAC,GAAGC,IAAJ,KAAa;AAC3BL,IAAAA,QAAQ,CAACM,IAAT,CAAc,MAAM;AAClBT,MAAAA,QAAQ,CAACO,IAAT,GAAgBA,IAAhB;AACAP,MAAAA,QAAQ,CAACO,IAAT,CAAc,GAAGC,IAAjB;AACD,KAHD;AAID,GALD;;AAOAb,EAAAA,cAAc,CAACI,OAAD,EAAUC,QAAV,EAAoBF,qBAApB,CAAd,CACGW,IADH,CACQC,IAAI,IAAI;AACZX,IAAAA,OAAO,CAACW,IAAR,GAAeA,IAAf;AACAT,IAAAA,IAAI;AACL,GAJH,EAKGU,KALH,CAKSC,KAAK,IAAI;AACd,QAAIA,KAAK,CAACC,MAAN,IAAgBD,KAAK,CAACE,MAA1B,EAAkCd,QAAQ,CAACa,MAAT,CAAgBD,KAAK,CAACC,MAAtB;AAClCZ,IAAAA,IAAI,CAACW,KAAD,CAAJ;AACD,GARH;AASD,CAxBM","sourcesContent":["import { processRequest as defaultProcessRequest } from './processRequest'\nexport const graphqlUploadExpress = ({\n  processRequest = defaultProcessRequest,\n  ...processRequestOptions\n} = {}) => (request, response, next) => {\n  if (!request.is('multipart/form-data')) return next()\n  const finished = new Promise(resolve => request.on('end', resolve))\n  const { send } = response\n\n  response.send = (...args) => {\n    finished.then(() => {\n      response.send = send\n      response.send(...args)\n    })\n  }\n\n  processRequest(request, response, processRequestOptions)\n    .then(body => {\n      request.body = body\n      next()\n    })\n    .catch(error => {\n      if (error.status && error.expose) response.status(error.status)\n      next(error)\n    })\n}\n"]},"metadata":{},"sourceType":"module"}