{"ast":null,"code":"var _jsxFileName = \"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/AccountPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { Row, Col, Container, Image, Button } from 'react-bootstrap';\nimport gql from 'graphql-tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AccountPage(props) {\n  _s();\n\n  var username = props.match.params.username;\n  console.log(useQuery(FETCH_USER_QUERY, {\n    variables: {\n      username: username\n    }\n  }));\n  const {\n    loading,\n    data\n  } = useQuery(FETCH_USER_QUERY, {\n    variables: {\n      username: username\n    }\n  });\n\n  if (loading) {\n    return \"loading\";\n  } else {\n    console.log(data);\n    const user = data.getUser;\n    let userText;\n\n    if (!user) {\n      userText = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading user...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }, this);\n    } else {\n      userText = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" User Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              src: \"holder.js/300x200\",\n              roundedCircle: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"@\", user.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: [/*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Recently Played\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Bookmarked\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Your platforms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-dark\",\n                size: \"lg\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(AccountPage, \"8sB5bqlJyq2PGsBCIwvcc2Emrno=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = AccountPage;\nexport default AccountPage;\nconst FETCH_USER_QUERY = gql`\n    query($username: String!) {\n        getUser(username: $username) \n        {\n            username\n            email\n            name\n            createdPlatforms\n            playedPlatforms\n            bookmarkedPlatforms\n        }\n    }\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountPage\");","map":{"version":3,"sources":["/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/AccountPage.js"],"names":["React","useContext","useQuery","Row","Col","Container","Image","Button","gql","AccountPage","props","username","match","params","console","log","FETCH_USER_QUERY","variables","loading","data","user","getUser","userText","name"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport { useQuery } from '@apollo/client';\nimport {Row, Col, Container, Image, Button} from 'react-bootstrap';\nimport gql from 'graphql-tag';\n\nfunction AccountPage(props) {\n    var username = props.match.params.username\n    console.log(useQuery(FETCH_USER_QUERY, {\n        variables: {\n            username: username\n        }\n    }));\n    const {loading, data} = useQuery(FETCH_USER_QUERY, {\n        variables: {\n            username: username\n        }\n    });\n    if (loading) {return \"loading\"}\n    else {\n        console.log(data);\n        const user = data.getUser\n\n    let userText\n    if (!user) {\n        userText = <p>Loading user...</p>\n    } else {\n\n        userText = (\n            <p> User Found</p>\n        )\n    }\n    return (\n        <Container>\n            <Row>\n            <Col>\n                <Row>\n                    <Image src = \"holder.js/300x200\"roundedCircle/>\n                </Row>\n                <Row>\n                    <h3>{user.name}</h3>\n                </Row>\n                <Row>\n                    <Col xs = {6}><p>@{user.username}</p></Col>\n                    <Col></Col>\n                </Row>\n            </Col>\n            <Col xs = {10}>\n                <Row>\n                </Row>\n                <Row>\n                    <Col>\n                    <p>Recently Played</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                    <p>Bookmarked</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                    <p>Your platforms</p>\n                    <Button variant = \"outline-dark\" size='lg'>+</Button>\n                    </Col>\n                </Row>\n            </Col>\n            </Row>\n        </Container>\n    );\n    }\n}\n\nexport default AccountPage;\n\nconst FETCH_USER_QUERY = gql`\n    query($username: String!) {\n        getUser(username: $username) \n        {\n            username\n            email\n            name\n            createdPlatforms\n            playedPlatforms\n            bookmarkedPlatforms\n        }\n    }\n`"]},"metadata":{},"sourceType":"module"}