{"ast":null,"code":"var _jsxFileName = \"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/AccountSettingsPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PlatformCard from '../components/PlatformCard';\nimport { Form, Button } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { useForm } from '../util/hooks';\nimport gql from 'graphql-tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AccountSettingsPage(props) {\n  _s();\n\n  const {\n    handleChange,\n    onSubmit,\n    values\n  } = useForm(changeUserInformation, {\n    email: '',\n    username: '',\n    name: ''\n  });\n  const [changeInfo, {\n    loading\n  }] = useMutation(EDIT_USER, {\n    update(proxy, result) {\n      props.history.push('/');\n    },\n\n    onError(err) {\n      // setErrors(err.graphQLErrors[0].extensions.exception.errors)\n      console.log(err);\n    },\n\n    variables: {\n      username: values.username,\n      name: values.name\n    }\n  });\n\n  function changeUserInformation() {\n    changeInfo();\n  }\n\n  var username = props.match.params.username;\n  console.log(useQuery(FETCH_USER_QUERY, {\n    variables: {\n      username: username\n    }\n  }));\n  const {\n    load,\n    data\n  } = useQuery(FETCH_USER_QUERY, {\n    variables: {\n      username: username\n    }\n  });\n\n  if (load) {\n    return \"loading\";\n  } else {\n    console.log(data);\n    const user = data.getUser;\n    let userText;\n\n    if (!user) {\n      userText = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading user...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 20\n      }, this);\n    } else {}\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Account Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Personal Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: onSubmit,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: user.name,\n              onChange: handleChange,\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: user.username,\n              onChange: handleChange,\n              name: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: user.email,\n              onChange: handleChange,\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Change password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(AccountSettingsPage, \"HTYjpG+AtHG6llssmB7z/yJhZUE=\", false, function () {\n  return [useForm, useMutation, useQuery, useQuery];\n});\n\n_c = AccountSettingsPage;\nexport default AccountSettingsPage;\nconst FETCH_USER_QUERY = gql`\n    query($username: String!) {\n        getUser(username: $username) \n        {\n            username\n            email\n            name\n            createdPlatforms\n            playedPlatforms\n            bookmarkedPlatforms\n        }\n    }\n`;\nconst EDIT_USER = gql`\n    mutation saveChanges(\n        $username: String!\n        $name: String!\n    ) {\n        saveChanges(\n            username: $username\n            email: $email\n            name: $name\n            password: $password\n        ) {\n            username\n            email\n            name\n            token\n        }\n    }\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSettingsPage\");","map":{"version":3,"sources":["/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/AccountSettingsPage.js"],"names":["React","PlatformCard","Form","Button","useQuery","useMutation","useForm","gql","AccountSettingsPage","props","handleChange","onSubmit","values","changeUserInformation","email","username","name","changeInfo","loading","EDIT_USER","update","proxy","result","history","push","onError","err","console","log","variables","match","params","FETCH_USER_QUERY","load","data","user","getUser","userText"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PlatformCard from '../components/PlatformCard'\nimport {Form, Button} from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { useForm } from '../util/hooks';\nimport gql from 'graphql-tag';\n\n\nfunction AccountSettingsPage(props) {\n\n    const { handleChange, onSubmit, values} = useForm(changeUserInformation, {\n        email: '',\n        username:'',\n        name:'',\n    })\n\n    const [changeInfo, {loading}] = useMutation(EDIT_USER, {\n        update(proxy, result) {\n            props.history.push('/')\n        },\n        onError(err) {\n            // setErrors(err.graphQLErrors[0].extensions.exception.errors)\n            console.log(err)\n        },\n        variables: {\n            username: values.username,\n            name: values.name,\n        }\n    })\n\n    function changeUserInformation() {\n        changeInfo()\n    }\n\n    var username = props.match.params.username\n    console.log(useQuery(FETCH_USER_QUERY, {\n        variables: {\n            username: username\n        }\n    }));\n    const {load, data} = useQuery(FETCH_USER_QUERY, {\n        variables: {\n            username: username\n        }\n    });\n    if (load) {return \"loading\"}\n    else {\n        console.log(data);\n        const user = data.getUser\n\n    let userText\n    if (!user) {\n        userText = <p>Loading user...</p>\n    } else {\n\n    }\n    return (\n            <div>\n                <div className=\"form-container\">\n                <h4>Account Settings</h4>\n                <p>Personal Information</p>\n                <Form onSubmit = {onSubmit} noValidate>\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control \n                        type=\"text\" \n                        placeholder={user.name}\n                        onChange = {handleChange}\n                        name = \"name\"/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"name\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\"  \n                        placeholder={user.username}\n                        onChange = {handleChange}\n                        name = \"username\"/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"name\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\"  \n                        value={user.email}\n                        onChange = {handleChange}\n                        name = \"email\"/>\n                    </Form.Group>\n\n                    <Button>Change password</Button>\n                    <p></p>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Save changes\n                    </Button>\n                </Form>\n            </div>\n            </div>\n        );\n    }\n    \n}\n    \n\nexport default AccountSettingsPage;\n\nconst FETCH_USER_QUERY = gql`\n    query($username: String!) {\n        getUser(username: $username) \n        {\n            username\n            email\n            name\n            createdPlatforms\n            playedPlatforms\n            bookmarkedPlatforms\n        }\n    }\n`\n\nconst EDIT_USER = gql`\n    mutation saveChanges(\n        $username: String!\n        $name: String!\n    ) {\n        saveChanges(\n            username: $username\n            email: $email\n            name: $name\n            password: $password\n        ) {\n            username\n            email\n            name\n            token\n        }\n    }\n`"]},"metadata":{},"sourceType":"module"}