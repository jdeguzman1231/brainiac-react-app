{"ast":null,"code":"var _jsxFileName = \"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/AccountSettingsPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PlatformCard from '../components/PlatformCard';\nimport { Form, Button } from 'react-bootstrap';\nimport gql from 'graphql-tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AccountSettingsPage(props) {\n  _s();\n\n  var username = props.match.params.username;\n  console.log(useQuery(FETCH_USER_QUERY, {\n    variables: {\n      username: username\n    }\n  }));\n  const {\n    loading,\n    data\n  } = useQuery(FETCH_USER_QUERY, {\n    variables: {\n      username: username\n    }\n  });\n\n  if (loading) {\n    return \"loading\";\n  } else {\n    console.log(data);\n    const user = data.getUser;\n    let userText;\n\n    if (!user) {\n      userText = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading user...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }, this);\n    } else {\n      userText = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" User Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Account Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Personal Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Name\" // onChange = {handleChange}\n              ,\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Username\" // onChange = {handleChange}\n              ,\n              name: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Email: email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Change password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(AccountSettingsPage, \"8sB5bqlJyq2PGsBCIwvcc2Emrno=\", true);\n\n_c = AccountSettingsPage;\nexport default AccountSettingsPage;\nconst FETCH_USER_QUERY = gql`\n    query($username: String!) {\n        getUser(username: $username) \n        {\n            username\n            email\n            name\n            createdPlatforms\n            playedPlatforms\n            bookmarkedPlatforms\n        }\n    }\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSettingsPage\");","map":{"version":3,"sources":["/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/AccountSettingsPage.js"],"names":["React","PlatformCard","Form","Button","gql","AccountSettingsPage","props","username","match","params","console","log","useQuery","FETCH_USER_QUERY","variables","loading","data","user","getUser","userText"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PlatformCard from '../components/PlatformCard'\nimport {Form, Button} from 'react-bootstrap';\nimport gql from 'graphql-tag';\n\n\nfunction AccountSettingsPage(props) {\n    var username = props.match.params.username\n    console.log(useQuery(FETCH_USER_QUERY, {\n        variables: {\n            username: username\n        }\n    }));\n    const {loading, data} = useQuery(FETCH_USER_QUERY, {\n        variables: {\n            username: username\n        }\n    });\n    if (loading) {return \"loading\"}\n    else {\n        console.log(data);\n        const user = data.getUser\n\n    let userText\n    if (!user) {\n        userText = <p>Loading user...</p>\n    } else {\n\n        userText = (\n            <p> User Found</p>\n        )\n    }\n    return (\n            <div>\n                <div className=\"form-container\">\n                <h4>Account Settings</h4>\n                <p>Personal Information</p>\n                <Form noValidate>\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control \n                        type=\"email\" \n                        placeholder=\"Name\" \n                        // onChange = {handleChange}\n                        name = \"name\"/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"name\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\"  \n                        placeholder=\"Username\" \n                        // onChange = {handleChange}\n                        name = \"username\"/>\n                    </Form.Group>\n\n                    <p>Email: email</p>\n\n                    <Button>Change password</Button>\n                    <p></p>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Sign Up\n                    </Button>\n                </Form>\n            </div>\n            </div>\n        );\n    }\n    \n}\n    \n\nexport default AccountSettingsPage;\n\nconst FETCH_USER_QUERY = gql`\n    query($username: String!) {\n        getUser(username: $username) \n        {\n            username\n            email\n            name\n            createdPlatforms\n            playedPlatforms\n            bookmarkedPlatforms\n        }\n    }\n`"]},"metadata":{},"sourceType":"module"}