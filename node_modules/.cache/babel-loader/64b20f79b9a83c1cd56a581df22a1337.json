{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject;import React,{useState}from'react';import{Form,Button}from'react-bootstrap';import{useMutation}from'@apollo/client';import gql from'graphql-tag';import{useForm}from'../util/hooks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SignUpPage(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),errors=_useState2[0],setErrors=_useState2[1];var _useForm=useForm(signupUser,{username:'',email:'',name:'',password:''}),handleChange=_useForm.handleChange,onSubmit=_useForm.onSubmit,values=_useForm.values;var _useMutation=useMutation(REGISTER_USER,{update:function update(proxy,result){console.log(result);},onError:function onError(err){setErrors(err.graphQLErrors[0].extensions.exception.errors);},variables:{username:values.username,email:values.email,name:values.name,password:values.password}}),_useMutation2=_slicedToArray(_useMutation,2),addUser=_useMutation2[0],loading=_useMutation2[1].loading;function signupUser(){addUser();}return/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Sign Up Page\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Welcome to Brainiac! Sign up below to begin.\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:onSubmit,noValidate:true,children:[/*#__PURE__*/_jsx(Form.Group,{controlId:\"email\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Email\",onChange:handleChange,name:\"email\"})}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"name\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Name\",onChange:handleChange,name:\"name\"})}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"username\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Username\",onChange:handleChange,name:\"username\"})}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"password\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Password\",onChange:handleChange,name:\"password\"})}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:\"Sign Up\"})]})]});}var REGISTER_USER=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    mutation createUser(\\n        $username: String!\\n        $email: String!\\n        $name: String!\\n        $password: String!\\n    ) {\\n        createUser(\\n            username: $username\\n            email: $email\\n            name: $name\\n            password: $password\\n        ) {\\n            username\\n            email\\n            name\\n            token\\n        }\\n    }\\n\"])));export default SignUpPage;","map":{"version":3,"sources":["/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/SignUpPage.js"],"names":["React","useState","Form","Button","useMutation","gql","useForm","SignUpPage","errors","setErrors","signupUser","username","email","name","password","handleChange","onSubmit","values","REGISTER_USER","update","proxy","result","console","log","onError","err","graphQLErrors","extensions","exception","variables","addUser","loading"],"mappings":"8XAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,IAAR,CAAcC,MAAd,KAA2B,iBAA3B,CACA,OAASC,WAAT,KAA4B,gBAA5B,CACA,MAAOC,CAAAA,GAAP,KAAgB,aAAhB,CACA,OAASC,OAAT,KAAwB,eAAxB,C,wFACA,QAASC,CAAAA,UAAT,EAAsB,eACYN,QAAQ,CAAC,EAAD,CADpB,wCACVO,MADU,eACFC,SADE,4BAGwBH,OAAO,CAACI,UAAD,CAAa,CAC1DC,QAAQ,CAAC,EADiD,CAE1DC,KAAK,CAAC,EAFoD,CAG1DC,IAAI,CAAC,EAHqD,CAI1DC,QAAQ,CAAC,EAJiD,CAAb,CAH/B,CAGVC,YAHU,UAGVA,YAHU,CAGIC,QAHJ,UAGIA,QAHJ,CAGcC,MAHd,UAGcA,MAHd,kBAUWb,WAAW,CAACc,aAAD,CAAgB,CACpDC,MADoD,iBAC7CC,KAD6C,CACtCC,MADsC,CAC9B,CAClBC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACH,CAHmD,CAIpDG,OAJoD,kBAI5CC,GAJ4C,CAIvC,CACThB,SAAS,CAACgB,GAAG,CAACC,aAAJ,CAAkB,CAAlB,EAAqBC,UAArB,CAAgCC,SAAhC,CAA0CpB,MAA3C,CAAT,CACH,CANmD,CAOpDqB,SAAS,CAAE,CACPlB,QAAQ,CAAEM,MAAM,CAACN,QADV,CAEPC,KAAK,CAAEK,MAAM,CAACL,KAFP,CAGPC,IAAI,CAAEI,MAAM,CAACJ,IAHN,CAIPC,QAAQ,CAAEG,MAAM,CAACH,QAJV,CAPyC,CAAhB,CAVtB,8CAUXgB,OAVW,kBAUDC,OAVC,kBAUDA,OAVC,CAyBlB,QAASrB,CAAAA,UAAT,EAAsB,CAClBoB,OAAO,GACV,CAED,mBACI,aAAK,SAAS,CAAC,gBAAf,wBACI,oCADJ,cAEI,mEAFJ,cAGI,MAAC,IAAD,EAAM,QAAQ,CAAEd,QAAhB,CAA0B,UAAU,KAApC,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,OAAtB,uBAEI,KAAC,IAAD,CAAM,OAAN,EACA,IAAI,CAAC,OADL,CAEA,WAAW,CAAC,OAFZ,CAGA,QAAQ,CAAID,YAHZ,CAIA,IAAI,CAAG,OAJP,EAFJ,EADJ,cAaI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,uBAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CACA,WAAW,CAAC,MADZ,CAEA,QAAQ,CAAIA,YAFZ,CAGA,IAAI,CAAG,MAHP,EAFJ,EAbJ,cAwBI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,UAAtB,uBAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CACC,WAAW,CAAC,UADb,CAEC,QAAQ,CAAIA,YAFb,CAGC,IAAI,CAAG,UAHR,EAFJ,EAxBJ,cAmCI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,UAAtB,uBAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,UAAnB,CACA,WAAW,CAAC,UADZ,CAEA,QAAQ,CAAIA,YAFZ,CAGA,IAAI,CAAG,UAHP,EAFJ,EAnCJ,cA6CI,KAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,IAAI,CAAC,QAA/B,qBA7CJ,GAHJ,GADJ,CAuDH,CAED,GAAMG,CAAAA,aAAa,CAAGb,GAAH,ucAAnB,CAqBA,cAAeE,CAAAA,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag'\nimport { useForm } from '../util/hooks';\nfunction SignUpPage() { \n    const [ errors, setErrors ] = useState({});\n\n    const { handleChange, onSubmit, values} = useForm(signupUser, {\n        username:'',\n        email:'',\n        name:'',\n        password:''\n    })\n\n    const [addUser, {loading}] = useMutation(REGISTER_USER, {\n        update(proxy, result) {\n            console.log(result)\n        },\n        onError(err) {\n            setErrors(err.graphQLErrors[0].extensions.exception.errors)\n        },\n        variables: {\n            username: values.username,\n            email: values.email,\n            name: values.name, \n            password: values.password\n        }\n    })\n\n    function signupUser() {\n        addUser();\n    }\n\n    return (\n        <div className=\"form-container\">\n            <h1>Sign Up Page</h1>\n            <p>Welcome to Brainiac! Sign up below to begin.</p>\n            <Form onSubmit={onSubmit} noValidate>\n                <Form.Group controlId=\"email\">\n                    {/* <Form.Label>Email address</Form.Label> */}\n                    <Form.Control \n                    type=\"email\" \n                    placeholder=\"Email\" \n                    onChange = {handleChange}\n                    name = \"email\"/>\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text> */}\n                </Form.Group>\n\n                <Form.Group controlId=\"name\">\n                    {/* <Form.Label>Email address</Form.Label> */}\n                    <Form.Control type=\"text\"  \n                    placeholder=\"Name\" \n                    onChange = {handleChange}\n                    name = \"name\"/>\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text> */}\n                </Form.Group>\n\n                <Form.Group controlId=\"username\">\n                    {/* <Form.Label>Email address</Form.Label> */}\n                    <Form.Control type=\"text\" \n                     placeholder=\"Username\" \n                     onChange = {handleChange}\n                     name = \"username\"/>\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text> */}\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    {/* <Form.Label>Password</Form.Label> */}\n                    <Form.Control type=\"password\" \n                    placeholder=\"Password\"\n                    onChange = {handleChange}\n                    name = \"password\"/>\n                </Form.Group>\n                {/* <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group> */}\n                <Button variant=\"primary\" type=\"submit\">\n                    Sign Up\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nconst REGISTER_USER = gql`\n    mutation createUser(\n        $username: String!\n        $email: String!\n        $name: String!\n        $password: String!\n    ) {\n        createUser(\n            username: $username\n            email: $email\n            name: $name\n            password: $password\n        ) {\n            username\n            email\n            name\n            token\n        }\n    }\n`\n\nexport default SignUpPage;"]},"metadata":{},"sourceType":"module"}