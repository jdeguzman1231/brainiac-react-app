{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useForm } from '../util/hooks';\n\nfunction LoginPage(props) {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const {\n    handleChange,\n    onSubmit,\n    values\n  } = useForm(loginUserCallback, {\n    email: '',\n    password: ''\n  });\n  const [loginUser, {\n    loading\n  }] = useMutation(LOGIN_USER, {\n    update(proxy, result) {\n      console.log(result);\n      props.history.push('/');\n    },\n\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n\n    variables: {\n      username: values.username,\n      email: values.email,\n      name: values.name,\n      password: values.password\n    }\n  });\n\n  function loginUserCallback() {\n    loginUser();\n  } //     return (\n  //         <div className=\"form-container\">\n  //             <h1>Login Page</h1>\n  //             <p>Welcome back! Log in below to begin.</p>\n  //             <Form onSubmit={onSubmit} noValidate>\n  //                 <Form.Group controlId=\"email\">\n  //                     {/* <Form.Label>Email address</Form.Label> */}\n  //                     <Form.Control \n  //                     type=\"email\" \n  //                     placeholder=\"Email\" \n  //                     onChange = {handleChange}\n  //                     name = \"email\"/>\n  //                     {/* <Form.Text className=\"text-muted\">\n  //                     We'll never share your email with anyone else.\n  //                     </Form.Text> */}\n  //                 </Form.Group>\n  //                 <Form.Group controlId=\"password\">\n  //                     {/* <Form.Label>Password</Form.Label> */}\n  //                     <Form.Control type=\"password\" \n  //                     placeholder=\"Password\"\n  //                     onChange = {handleChange}\n  //                     name = \"password\"/>\n  //                 </Form.Group>\n  //                 {/* <Form.Group controlId=\"formBasicCheckbox\">\n  //                     <Form.Check type=\"checkbox\" label=\"Check me out\" />\n  //                 </Form.Group> */}\n  //                 <Button variant=\"primary\" type=\"submit\">\n  //                     Submit\n  //                 </Button>\n  //             </Form>\n  //         </div>\n  //     );\n  // }\n  // const REGISTER_USER = gql`\n  //     mutation createUser(\n  //         $username: String!\n  //         $email: String!\n  //         $name: String!\n  //         $password: String!\n  //     ) {\n  //         createUser(\n  //             username: $username\n  //             email: $email\n  //             name: $name\n  //             password: $password\n  //         ) {\n  //             username\n  //             email\n  //             name\n  //             token\n  //         }\n\n} // `\n\n\n_s(LoginPage, \"6dz56DW/fAnAdStN+m3fnO07EGs=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/josephdeguzman/Documents/CSE/brainiac-app/brainiac/src/pages/LoginPage.js"],"names":["React","useState","Form","Button","useMutation","gql","useForm","LoginPage","props","errors","setErrors","handleChange","onSubmit","values","loginUserCallback","email","password","loginUser","loading","LOGIN_USER","update","proxy","result","console","log","history","push","onError","err","graphQLErrors","extensions","exception","variables","username","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAAUC,OAAV,QAAyB,eAAzB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM;AAAEU,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAqCP,OAAO,CAACQ,iBAAD,EAAoB;AAClEC,IAAAA,KAAK,EAAE,EAD2D;AAElEC,IAAAA,QAAQ,EAAE;AAFwD,GAApB,CAAlD;AAKA,QAAM,CAACC,SAAD,EAAY;AAACC,IAAAA;AAAD,GAAZ,IAAyBd,WAAW,CAACe,UAAD,EAAa;AACnDC,IAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAd,MAAAA,KAAK,CAACiB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACF,KAJiD;;AAKnDC,IAAAA,OAAO,CAACC,GAAD,EAAM;AACTlB,MAAAA,SAAS,CAACkB,GAAG,CAACC,aAAJ,CAAkB,CAAlB,EAAqBC,UAArB,CAAgCC,SAAhC,CAA0CtB,MAA3C,CAAT;AACH,KAPkD;;AAQnDuB,IAAAA,SAAS,EAAE;AACPC,MAAAA,QAAQ,EAAEpB,MAAM,CAACoB,QADV;AAEPlB,MAAAA,KAAK,EAAEF,MAAM,CAACE,KAFP;AAGPmB,MAAAA,IAAI,EAAErB,MAAM,CAACqB,IAHN;AAIPlB,MAAAA,QAAQ,EAAEH,MAAM,CAACG;AAJV;AARwC,GAAb,CAA1C;;AAgBA,WAASF,iBAAT,GAA6B;AACzBG,IAAAA,SAAS;AACZ,GA1BqB,CA6B1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,C,CACN;;;GAnFSV,S;UAGsCD,O,EAKZF,W;;;KAR1BG,S;AAqFT,eAAeA,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag'\n\nimport  { useForm } from '../util/hooks';\n\nfunction LoginPage(props) { \n    const [ errors, setErrors ] = useState({});\n    \n    const { handleChange, onSubmit, values } = useForm(loginUserCallback, {\n        email: '',\n        password: ''\n    }) \n\n    const [loginUser, {loading}] = useMutation(LOGIN_USER, {\n        update(proxy, result) {\n            console.log(result)\n            props.history.push('/')\n         },\n        onError(err) {\n            setErrors(err.graphQLErrors[0].extensions.exception.errors)\n        },\n        variables: {\n            username: values.username,\n            email: values.email,\n            name: values.name, \n            password: values.password\n        }\n    })\n\n    function loginUserCallback() {\n        loginUser()\n    }\n\n    \n//     return (\n//         <div className=\"form-container\">\n//             <h1>Login Page</h1>\n//             <p>Welcome back! Log in below to begin.</p>\n//             <Form onSubmit={onSubmit} noValidate>\n//                 <Form.Group controlId=\"email\">\n//                     {/* <Form.Label>Email address</Form.Label> */}\n//                     <Form.Control \n//                     type=\"email\" \n//                     placeholder=\"Email\" \n//                     onChange = {handleChange}\n//                     name = \"email\"/>\n//                     {/* <Form.Text className=\"text-muted\">\n//                     We'll never share your email with anyone else.\n//                     </Form.Text> */}\n//                 </Form.Group>\n\n//                 <Form.Group controlId=\"password\">\n//                     {/* <Form.Label>Password</Form.Label> */}\n//                     <Form.Control type=\"password\" \n//                     placeholder=\"Password\"\n//                     onChange = {handleChange}\n//                     name = \"password\"/>\n//                 </Form.Group>\n//                 {/* <Form.Group controlId=\"formBasicCheckbox\">\n//                     <Form.Check type=\"checkbox\" label=\"Check me out\" />\n//                 </Form.Group> */}\n//                 <Button variant=\"primary\" type=\"submit\">\n//                     Submit\n//                 </Button>\n//             </Form>\n//         </div>\n//     );\n// }\n\n// const REGISTER_USER = gql`\n//     mutation createUser(\n//         $username: String!\n//         $email: String!\n//         $name: String!\n//         $password: String!\n//     ) {\n//         createUser(\n//             username: $username\n//             email: $email\n//             name: $name\n//             password: $password\n//         ) {\n//             username\n//             email\n//             name\n//             token\n//         }\n     }\n// `\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}