{"ast":null,"code":"import _defineProperty from\"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';export var useForm=function useForm(callback){var initialState=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var handleChange=function handleChange(event){setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},event.target.name,event.target.value)));};var onSubmit=function onSubmit(event){event.preventDefault();callback();};return{handleChange:handleChange,onSubmit:onSubmit,values:values};};","map":{"version":3,"sources":["/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/util/hooks.js"],"names":["useState","useForm","callback","initialState","values","setValues","handleChange","event","target","name","value","onSubmit","preventDefault"],"mappings":"wgBAAA,OAAQA,QAAR,KAAwB,OAAxB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,QAAD,CAAiC,IAAtBC,CAAAA,YAAsB,2DAAP,EAAO,eACxBH,QAAQ,CAACG,YAAD,CADgB,wCAC7CC,MAD6C,eACrCC,SADqC,eAGpD,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5BF,SAAS,gCAAKD,MAAL,wBAAcG,KAAK,CAACC,MAAN,CAAaC,IAA3B,CAAkCF,KAAK,CAACC,MAAN,CAAaE,KAA/C,GAAT,CACH,CAFD,CAIA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACJ,KAAD,CAAW,CACxBA,KAAK,CAACK,cAAN,GACAV,QAAQ,GACX,CAHD,CAKA,MAAO,CACHI,YAAY,CAAZA,YADG,CAEHK,QAAQ,CAARA,QAFG,CAGHP,MAAM,CAANA,MAHG,CAAP,CAKH,CAjBM","sourcesContent":["import {useState } from 'react';\n\nexport const useForm = (callback, initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    const handleChange = (event) => {\n        setValues({...values, [event.target.name]: event.target.value});\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        callback();\n    }\n\n    return {\n        handleChange, \n        onSubmit, \n        values\n    }\n}"]},"metadata":{},"sourceType":"module"}