{"ast":null,"code":"var _jsxFileName = \"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/ExplorePage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport PlatformCard from '../components/PlatformCard';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { stripIgnoredCharacters } from 'graphql';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExplorePage() {\n  _s();\n\n  console.log(useQuery(FETCH_PLATFORMS_QUERY));\n  const {\n    loading,\n    data\n  } = useQuery(FETCH_PLATFORMS_QUERY);\n\n  if (loading) {\n    return \"loading\";\n  } else {\n    console.log(data);\n    const platforms = data.getPlatforms;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Explore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 34\n          }, this) : platforms && platforms.map(platform => /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(PlatformCard, {\n              platform: platform\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(ExplorePage, \"Dq7PirN63+xI6GL97oC7pI10UQs=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = ExplorePage;\nconst FETCH_PLATFORMS_QUERY = gql`\n{\n    getPlatforms{\n        platformID name creatorName\n    }\n}   \n`;\nexport default ExplorePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExplorePage\");","map":{"version":3,"sources":["/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/ExplorePage.js"],"names":["React","gql","useQuery","PlatformCard","Container","Col","Row","stripIgnoredCharacters","ExplorePage","console","log","FETCH_PLATFORMS_QUERY","loading","data","platforms","getPlatforms","map","platform"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,GAAxB,QAAkC,iBAAlC;AACA,SAASC,sBAAT,QAAuC,SAAvC;;;AAGA,SAASC,WAAT,GAAuB;AAAA;;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACS,qBAAD,CAApB;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAmBX,QAAQ,CAACS,qBAAD,CAAjC;;AACA,MAAIC,OAAJ,EAAa;AAAC,WAAO,SAAP;AAAiB,GAA/B,MACK;AACLH,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACA,UAAMC,SAAS,GAAGD,IAAI,CAACE,YAAvB;AACA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,SAAD;AAAA,+BACI,QAAC,GAAD;AAAA,oBAAMH,OAAO,gBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ,GACTE,SAAS,IAAIA,SAAS,CAACE,GAAV,CAAeC,QAAD,iBACvB,QAAC,GAAD;AAAA,mCACI,QAAC,YAAD;AAAc,cAAA,QAAQ,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADS;AADjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBiB;AACpB;;GAxBQT,W;UACON,Q,EACaA,Q;;;KAFpBM,W;AA0BT,MAAMG,qBAAqB,GAAGV,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,eAAeO,WAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client'\nimport PlatformCard from '../components/PlatformCard'\nimport {Container, Col, Row} from 'react-bootstrap'\nimport { stripIgnoredCharacters } from 'graphql';\n\n\nfunction ExplorePage() {\n    console.log(useQuery(FETCH_PLATFORMS_QUERY));\n    const { loading, data} = useQuery(FETCH_PLATFORMS_QUERY);\n    if (loading) {return \"loading\"}\n    else {\n    console.log(data);\n    const platforms = data.getPlatforms\n    return (\n        <div>\n            <h1>Explore</h1>\n            \n            <Container>\n                <Row>{loading ? (<h1>Loading...</h1>) : (\n                    platforms && platforms.map((platform) =>(\n                        <Col > \n                            <PlatformCard platform={platform}/>\n                        </Col>\n                    ))\n                )}\n                </Row> \n            </Container>\n        </div>\n    );\n                    }\n}\n\nconst FETCH_PLATFORMS_QUERY = gql`\n{\n    getPlatforms{\n        platformID name creatorName\n    }\n}   \n`;\n\nexport default ExplorePage;\n\n"]},"metadata":{},"sourceType":"module"}