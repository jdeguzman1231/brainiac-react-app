{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst apollo_env_1 = require(\"apollo-env\");\n\nconst transforms_1 = require(\"./transforms\");\n\nfunction defaultUsageReportingSignature(ast, operationName) {\n  return transforms_1.printWithReducedWhitespace(transforms_1.sortAST(transforms_1.removeAliases(transforms_1.hideLiterals(transforms_1.dropUnusedDefinitions(ast, operationName)))));\n}\n\nexports.defaultUsageReportingSignature = defaultUsageReportingSignature;\n\nfunction operationRegistrySignature(ast, operationName, options = {\n  preserveStringAndNumericLiterals: false\n}) {\n  const withoutUnusedDefs = transforms_1.dropUnusedDefinitions(ast, operationName);\n  const maybeWithLiterals = options.preserveStringAndNumericLiterals ? withoutUnusedDefs : transforms_1.hideStringAndNumericLiterals(withoutUnusedDefs);\n  return transforms_1.printWithReducedWhitespace(transforms_1.sortAST(maybeWithLiterals));\n}\n\nexports.operationRegistrySignature = operationRegistrySignature;\n\nfunction defaultOperationRegistrySignature(ast, operationName) {\n  return operationRegistrySignature(ast, operationName, {\n    preserveStringAndNumericLiterals: false\n  });\n}\n\nexports.defaultOperationRegistrySignature = defaultOperationRegistrySignature;\n\nfunction operationHash(operation) {\n  return apollo_env_1.createHash(\"sha256\").update(operation).digest(\"hex\");\n}\n\nexports.operationHash = operationHash;","map":{"version":3,"sources":["../src/operationId.ts"],"names":[],"mappings":";;;;;;AAuDA,MAAA,YAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,MAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAYA,SAAgB,8BAAhB,CACE,GADF,EAEE,aAFF,EAEuB;AAErB,SAAO,YAAA,CAAA,0BAAA,CACL,YAAA,CAAA,OAAA,CACE,YAAA,CAAA,aAAA,CAAc,YAAA,CAAA,YAAA,CAAa,YAAA,CAAA,qBAAA,CAAsB,GAAtB,EAA2B,aAA3B,CAAb,CAAd,CADF,CADK,CAAP;AAKD;;AATD,OAAA,CAAA,8BAAA,GAAA,8BAAA;;AAeA,SAAgB,0BAAhB,CACE,GADF,EAEE,aAFF,EAGE,OAAA,GAAyD;AACvD,EAAA,gCAAgC,EAAE;AADqB,CAH3D,EAKG;AAED,QAAM,iBAAiB,GAAG,YAAA,CAAA,qBAAA,CAAsB,GAAtB,EAA2B,aAA3B,CAA1B;AACA,QAAM,iBAAiB,GAAG,OAAO,CAAC,gCAAR,GACtB,iBADsB,GAEtB,YAAA,CAAA,4BAAA,CAA6B,iBAA7B,CAFJ;AAGA,SAAO,YAAA,CAAA,0BAAA,CAA2B,YAAA,CAAA,OAAA,CAAQ,iBAAR,CAA3B,CAAP;AACD;;AAZD,OAAA,CAAA,0BAAA,GAAA,0BAAA;;AAcA,SAAgB,iCAAhB,CACE,GADF,EAEE,aAFF,EAEuB;AAErB,SAAO,0BAA0B,CAAC,GAAD,EAAM,aAAN,EAAqB;AACpD,IAAA,gCAAgC,EAAE;AADkB,GAArB,CAAjC;AAGD;;AAPD,OAAA,CAAA,iCAAA,GAAA,iCAAA;;AASA,SAAgB,aAAhB,CAA8B,SAA9B,EAA+C;AAC7C,SAAO,YAAA,CAAA,UAAA,CAAW,QAAX,EACJ,MADI,CACG,SADH,EAEJ,MAFI,CAEG,KAFH,CAAP;AAGD;;AAJD,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst apollo_env_1 = require(\"apollo-env\");\nconst transforms_1 = require(\"./transforms\");\nfunction defaultUsageReportingSignature(ast, operationName) {\n    return transforms_1.printWithReducedWhitespace(transforms_1.sortAST(transforms_1.removeAliases(transforms_1.hideLiterals(transforms_1.dropUnusedDefinitions(ast, operationName)))));\n}\nexports.defaultUsageReportingSignature = defaultUsageReportingSignature;\nfunction operationRegistrySignature(ast, operationName, options = {\n    preserveStringAndNumericLiterals: false\n}) {\n    const withoutUnusedDefs = transforms_1.dropUnusedDefinitions(ast, operationName);\n    const maybeWithLiterals = options.preserveStringAndNumericLiterals\n        ? withoutUnusedDefs\n        : transforms_1.hideStringAndNumericLiterals(withoutUnusedDefs);\n    return transforms_1.printWithReducedWhitespace(transforms_1.sortAST(maybeWithLiterals));\n}\nexports.operationRegistrySignature = operationRegistrySignature;\nfunction defaultOperationRegistrySignature(ast, operationName) {\n    return operationRegistrySignature(ast, operationName, {\n        preserveStringAndNumericLiterals: false\n    });\n}\nexports.defaultOperationRegistrySignature = defaultOperationRegistrySignature;\nfunction operationHash(operation) {\n    return apollo_env_1.createHash(\"sha256\")\n        .update(operation)\n        .digest(\"hex\");\n}\nexports.operationHash = operationHash;\n//# sourceMappingURL=operationId.js.map"]},"metadata":{},"sourceType":"script"}