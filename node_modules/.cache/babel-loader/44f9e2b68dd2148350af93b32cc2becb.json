{"ast":null,"code":"var _jsxFileName = \"/Users/darrenjiang/Desktop/brainiac Client/src/components/GameCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GameCard(id) {\n  _s();\n\n  const gameID = parseInt(id['gameID'], 10);\n  console.log(gameID);\n  const {\n    loading,\n    data\n  } = useQuery(FETCH_GAME_QUERY, {\n    variables: {\n      gameID,\n      gameID\n    }\n  });\n\n  if (loading) {\n    return \"loading\";\n  } else {\n    console.log(data);\n    const game = data.getGame;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: \"holder.js/100px180\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: game.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/game/${gameID}`,\n          children: \"play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"created by \", game.creatorName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(GameCard, \"HasvTXHwlBNedvPpf4Gl00Z2xbw=\", false, function () {\n  return [useQuery];\n});\n\n_c = GameCard;\nconst FETCH_GAME_QUERY = gql`\n    query($gameID: Int!){\n        getGame(gameID: $gameID){\n            name\n            creatorName\n            description\n            parentPlatform\n        }\n    } \n`;\nexport default GameCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameCard\");","map":{"version":3,"sources":["/Users/darrenjiang/Desktop/brainiac Client/src/components/GameCard.js"],"names":["React","Card","useQuery","gql","Link","GameCard","id","gameID","parseInt","console","log","loading","data","FETCH_GAME_QUERY","variables","game","getGame","width","name","creatorName"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,SAASC,QAAT,CAAkBC,EAAlB,EAAsB;AAAA;;AAClB,QAAMC,MAAM,GAAGC,QAAQ,CAACF,EAAE,CAAC,QAAD,CAAH,EAAe,EAAf,CAAvB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBV,QAAQ,CAACW,gBAAD,EAAmB;AACjDC,IAAAA,SAAS,EAAE;AAAEP,MAAAA,MAAF;AAAUA,MAAAA;AAAV;AADsC,GAAnB,CAAlC;;AAGA,MAAII,OAAJ,EAAa;AAAE,WAAO,SAAP;AAAkB,GAAjC,MACK;AACDF,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACA,UAAMG,IAAI,GAAGH,IAAI,CAACI,OAAlB;AACA,wBACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA,8BACI,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,OAAO,EAAC,KAAlB;AAAwB,QAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAaF,IAAI,CAACG;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,SAAQX,MAAO,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAA,oCACgBQ,IAAI,CAACI,WADrB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;AACJ;;GAvBQd,Q;UAGqBH,Q;;;KAHrBG,Q;AAyBT,MAAMQ,gBAAgB,GAAGV,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,eAAeE,QAAf","sourcesContent":["import React from 'react';\nimport { Card } from 'react-bootstrap'\nimport { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport { Link } from 'react-router-dom'\n\nfunction GameCard(id) {\n    const gameID = parseInt(id['gameID'], 10);\n    console.log(gameID)\n    const { loading, data } = useQuery(FETCH_GAME_QUERY, {\n        variables: { gameID, gameID },\n    });\n    if (loading) { return \"loading\" }\n    else {\n        console.log(data)\n        const game = data.getGame\n        return (\n            <Card style={{ width: '18rem' }}>\n                <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n                <Card.Body>\n                    <Card.Title>{game.name}</Card.Title>\n                    <Link to={`/game/${gameID}`}>play</Link>\n                    <Card.Text>\n                        created by {game.creatorName}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nconst FETCH_GAME_QUERY = gql`\n    query($gameID: Int!){\n        getGame(gameID: $gameID){\n            name\n            creatorName\n            description\n            parentPlatform\n        }\n    } \n`;\n\nexport default GameCard;"]},"metadata":{},"sourceType":"module"}