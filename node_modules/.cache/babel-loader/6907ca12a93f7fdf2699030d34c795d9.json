{"ast":null,"code":"var _jsxFileName = \"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/SignUpPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useForm } from '../util/hooks';\nimport { AuthContext } from '../context/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignUpPage(props) {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const {\n    handleChange,\n    onSubmit,\n    values\n  } = useForm(signupUser, {\n    username: '',\n    email: '',\n    name: '',\n    password: ''\n  });\n  const [addUser, {\n    loading\n  }] = useMutation(REGISTER_USER, {\n    update(proxy, result) {\n      console.log(result);\n      props.history.push('/');\n    },\n\n    onError(err) {\n      // setErrors(err.graphQLErrors[0].extensions.exception.errors)\n      console.log(err);\n    },\n\n    variables: {\n      username: values.username,\n      email: values.email,\n      name: values.name,\n      password: values.password\n    }\n  });\n\n  function signupUser() {\n    addUser();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome to Brainiac! Sign up below to begin.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Email\",\n          onChange: handleChange,\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Name\",\n          onChange: handleChange,\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"username\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Username\",\n          onChange: handleChange,\n          name: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: handleChange,\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUpPage, \"ZH64fUPbnMMRtrUEv9nDNvHKYrg=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = SignUpPage;\nconst REGISTER_USER = gql`\n    mutation createUser(\n        $username: String!\n        $email: String!\n        $name: String!\n        $password: String!\n    ) {\n        createUser(\n            username: $username\n            email: $email\n            name: $name\n            password: $password\n        ) {\n            username\n            email\n            name\n            token\n        }\n    }\n`;\nexport default SignUpPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"sources":["/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/SignUpPage.js"],"names":["React","useState","Form","Button","useMutation","gql","useForm","AuthContext","SignUpPage","props","errors","setErrors","handleChange","onSubmit","values","signupUser","username","email","name","password","addUser","loading","REGISTER_USER","update","proxy","result","console","log","history","push","onError","err","variables"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag'\nimport { useForm } from '../util/hooks';\nimport { AuthContext } from '../context/auth'\nfunction SignUpPage(props) { \n    const [ errors, setErrors ] = useState({});\n\n    const { handleChange, onSubmit, values} = useForm(signupUser, {\n        username:'',\n        email:'',\n        name:'',\n        password:''\n    })\n\n    const [addUser, {loading}] = useMutation(REGISTER_USER, {\n        update(proxy, result) {\n            console.log(result)\n            props.history.push('/')\n        },\n        onError(err) {\n            // setErrors(err.graphQLErrors[0].extensions.exception.errors)\n            console.log(err)\n        },\n        variables: {\n            username: values.username,\n            email: values.email,\n            name: values.name, \n            password: values.password\n        }\n    })\n\n    function signupUser() {\n        addUser();\n    }\n\n    return (\n        <div className=\"form-container\">\n            <h1>Sign Up Page</h1>\n            <p>Welcome to Brainiac! Sign up below to begin.</p>\n            <Form onSubmit={onSubmit} noValidate>\n                <Form.Group controlId=\"email\">\n                    {/* <Form.Label>Email address</Form.Label> */}\n                    <Form.Control \n                    type=\"email\" \n                    placeholder=\"Email\" \n                    onChange = {handleChange}\n                    name = \"email\"/>\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text> */}\n                </Form.Group>\n\n                <Form.Group controlId=\"name\">\n                    {/* <Form.Label>Email address</Form.Label> */}\n                    <Form.Control type=\"text\"  \n                    placeholder=\"Name\" \n                    onChange = {handleChange}\n                    name = \"name\"/>\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text> */}\n                </Form.Group>\n\n                <Form.Group controlId=\"username\">\n                    {/* <Form.Label>Email address</Form.Label> */}\n                    <Form.Control type=\"text\" \n                     placeholder=\"Username\" \n                     onChange = {handleChange}\n                     name = \"username\"/>\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text> */}\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    {/* <Form.Label>Password</Form.Label> */}\n                    <Form.Control type=\"password\" \n                    placeholder=\"Password\"\n                    onChange = {handleChange}\n                    name = \"password\"/>\n                </Form.Group>\n                {/* <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group> */}\n                <Button variant=\"primary\" type=\"submit\">\n                    Sign Up\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nconst REGISTER_USER = gql`\n    mutation createUser(\n        $username: String!\n        $email: String!\n        $name: String!\n        $password: String!\n    ) {\n        createUser(\n            username: $username\n            email: $email\n            name: $name\n            password: $password\n        ) {\n            username\n            email\n            name\n            token\n        }\n    }\n`\n\nexport default SignUpPage;"]},"metadata":{},"sourceType":"module"}