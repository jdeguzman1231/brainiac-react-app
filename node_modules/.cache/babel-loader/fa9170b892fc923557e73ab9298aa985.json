{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject;import React,{useState}from'react';import{Form,Button}from'react-bootstrap';import{useMutation}from'@apollo/client';import gql from'graphql-tag';import{useForm}from'../util/hooks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function LoginPage(props){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),errors=_useState2[0],setErrors=_useState2[1];var _useForm=useForm(loginUserCallback,{email:'',password:''}),handleChange=_useForm.handleChange,onSubmit=_useForm.onSubmit,values=_useForm.values;var _useMutation=useMutation(LOGIN_USER,{update:function update(proxy,result){console.log(result);props.history.push('/');},onError:function onError(err){setErrors(err.graphQLErrors[0].extensions.exception.errors);},variables:{username:values.username,email:values.email,name:values.name,password:values.password}}),_useMutation2=_slicedToArray(_useMutation,2),loginUser=_useMutation2[0],loading=_useMutation2[1].loading;function loginUserCallback(){loginUser();}return/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login Page\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Welcome back! Log in below to begin.\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:onSubmit,noValidate:true,children:[/*#__PURE__*/_jsx(Form.Group,{controlId:\"email\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Email\",onChange:handleChange,name:\"email\"})}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"password\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Password\",onChange:handleChange,name:\"password\"})}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:\"Login\"})]})]});}var LOGIN_USER=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    mutation createUser(\\n        $username: String!\\n        $email: String!\\n        $name: String!\\n        $password: String!\\n    ) {\\n        createUser(\\n            username: $username\\n            email: $email\\n            name: $name\\n            password: $password\\n        ) {\\n            username\\n            email\\n            name\\n            token\\n        }\\n     }\\n \"])));export default LoginPage;","map":{"version":3,"sources":["/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/LoginPage.js"],"names":["React","useState","Form","Button","useMutation","gql","useForm","LoginPage","props","errors","setErrors","loginUserCallback","email","password","handleChange","onSubmit","values","LOGIN_USER","update","proxy","result","console","log","history","push","onError","err","graphQLErrors","extensions","exception","variables","username","name","loginUser","loading"],"mappings":"8XAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,IAAR,CAAcC,MAAd,KAA2B,iBAA3B,CACA,OAASC,WAAT,KAA4B,gBAA5B,CACA,MAAOC,CAAAA,GAAP,KAAgB,aAAhB,CAEA,OAAUC,OAAV,KAAyB,eAAzB,C,wFAEA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,eACQP,QAAQ,CAAC,EAAD,CADhB,wCACdQ,MADc,eACNC,SADM,4BAGqBJ,OAAO,CAACK,iBAAD,CAAoB,CAClEC,KAAK,CAAE,EAD2D,CAElEC,QAAQ,CAAE,EAFwD,CAApB,CAH5B,CAGdC,YAHc,UAGdA,YAHc,CAGAC,QAHA,UAGAA,QAHA,CAGUC,MAHV,UAGUA,MAHV,kBAQSZ,WAAW,CAACa,UAAD,CAAa,CACnDC,MADmD,iBAC5CC,KAD4C,CACrCC,MADqC,CAC7B,CAClBC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACAZ,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmB,GAAnB,EACF,CAJiD,CAKnDC,OALmD,kBAK3CC,GAL2C,CAKtC,CACThB,SAAS,CAACgB,GAAG,CAACC,aAAJ,CAAkB,CAAlB,EAAqBC,UAArB,CAAgCC,SAAhC,CAA0CpB,MAA3C,CAAT,CACH,CAPkD,CAQnDqB,SAAS,CAAE,CACPC,QAAQ,CAAEf,MAAM,CAACe,QADV,CAEPnB,KAAK,CAAEI,MAAM,CAACJ,KAFP,CAGPoB,IAAI,CAAEhB,MAAM,CAACgB,IAHN,CAIPnB,QAAQ,CAAEG,MAAM,CAACH,QAJV,CARwC,CAAb,CARpB,8CAQfoB,SARe,kBAQHC,OARG,kBAQHA,OARG,CAwBtB,QAASvB,CAAAA,iBAAT,EAA6B,CACzBsB,SAAS,GACZ,CAGD,mBACI,aAAK,SAAS,CAAC,gBAAf,wBACI,kCADJ,cAEI,2DAFJ,cAGI,MAAC,IAAD,EAAM,QAAQ,CAAElB,QAAhB,CAA0B,UAAU,KAApC,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,OAAtB,uBAEI,KAAC,IAAD,CAAM,OAAN,EACA,IAAI,CAAC,OADL,CAEA,WAAW,CAAC,OAFZ,CAGA,QAAQ,CAAID,YAHZ,CAIA,IAAI,CAAG,OAJP,EAFJ,EADJ,cAaK,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,UAAtB,uBAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,UAAnB,CACD,WAAW,CAAC,UADX,CAED,QAAQ,CAAIA,YAFX,CAGD,IAAI,CAAG,UAHN,EAFJ,EAbL,cAuBI,KAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,IAAI,CAAC,QAA/B,mBAvBJ,GAHJ,GADJ,CAiCH,CAED,GAAMG,CAAAA,UAAU,CAAGZ,GAAH,ycAAhB,CAqBA,cAAeE,CAAAA,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag'\n\nimport  { useForm } from '../util/hooks';\n\nfunction LoginPage(props) { \n    const [ errors, setErrors ] = useState({});\n    \n    const { handleChange, onSubmit, values } = useForm(loginUserCallback, {\n        email: '',\n        password: ''\n    }) \n\n    const [loginUser, {loading}] = useMutation(LOGIN_USER, {\n        update(proxy, result) {\n            console.log(result)\n            props.history.push('/')\n         },\n        onError(err) {\n            setErrors(err.graphQLErrors[0].extensions.exception.errors)\n        },\n        variables: {\n            username: values.username,\n            email: values.email,\n            name: values.name, \n            password: values.password\n        }\n    })\n\n    function loginUserCallback() {\n        loginUser()\n    }\n\n    \n    return (\n        <div className=\"form-container\">\n            <h1>Login Page</h1>\n            <p>Welcome back! Log in below to begin.</p>\n            <Form onSubmit={onSubmit} noValidate>\n                <Form.Group controlId=\"email\">\n                    {/* <Form.Label>Email address</Form.Label> */}\n                    <Form.Control \n                    type=\"email\" \n                    placeholder=\"Email\" \n                    onChange = {handleChange}\n                    name = \"email\"/>\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text> */}\n                </Form.Group>\n\n                 <Form.Group controlId=\"password\">\n                     {/* <Form.Label>Password</Form.Label> */}\n                     <Form.Control type=\"password\" \n                    placeholder=\"Password\"\n                    onChange = {handleChange}\n                    name = \"password\"/>\n                </Form.Group>\n                {/* <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group> */}\n                <Button variant=\"primary\" type=\"submit\">\n                    Login\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nconst LOGIN_USER = gql`\n    mutation createUser(\n        $username: String!\n        $email: String!\n        $name: String!\n        $password: String!\n    ) {\n        createUser(\n            username: $username\n            email: $email\n            name: $name\n            password: $password\n        ) {\n            username\n            email\n            name\n            token\n        }\n     }\n `\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}