[{"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/index.js":"1","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/reportWebVitals.js":"2","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/ApolloProvider.js":"3","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/App.js":"4","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/AccountPage.js":"5","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/AccountSettingsPage.js":"6","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/SignUpPage.js":"7","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/context/auth.js":"8","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/HomePage.js":"9","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/LoginPage.js":"10","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/components/NavBar.js":"11","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/components/PlatformCard.js":"12","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/util/hooks.js":"13","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/CreatePlatformPage.js":"14","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/PlatformPage.js":"15","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/ExplorePage.js":"16","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/GamePage.js":"17","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/components/GameCard.js":"18"},{"size":551,"mtime":1618580805493,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1618580805495,"results":"21","hashOfConfig":"20"},{"size":561,"mtime":1618894557321,"results":"22","hashOfConfig":"20"},{"size":1615,"mtime":1618968423859,"results":"23","hashOfConfig":"20"},{"size":2162,"mtime":1618968336415,"results":"24","hashOfConfig":"20"},{"size":3040,"mtime":1618549483719,"results":"25","hashOfConfig":"20"},{"size":3845,"mtime":1618580805495,"results":"26","hashOfConfig":"20"},{"size":1447,"mtime":1618580805493,"results":"27","hashOfConfig":"20"},{"size":941,"mtime":1618580805494,"results":"28","hashOfConfig":"20"},{"size":3249,"mtime":1618580805494,"results":"29","hashOfConfig":"20"},{"size":1685,"mtime":1618968336414,"results":"30","hashOfConfig":"20"},{"size":633,"mtime":1618885823687,"results":"31","hashOfConfig":"20"},{"size":438,"mtime":1618580805495,"results":"32","hashOfConfig":"20"},{"size":3084,"mtime":1618968336416,"results":"33","hashOfConfig":"20"},{"size":1652,"mtime":1618967799481,"results":"34","hashOfConfig":"20"},{"size":1268,"mtime":1618967799480,"results":"35","hashOfConfig":"20"},{"size":1152,"mtime":1618967799481,"results":"36","hashOfConfig":"20"},{"size":1180,"mtime":1618885823687,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"hgjtk4",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/index.js",["80","81"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ApolloProvider from './ApolloProvider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(ApolloProvider, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["82","83"],"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/reportWebVitals.js",[],"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/ApolloProvider.js",[],"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/App.js",[],"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/AccountPage.js",["84","85"],"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/AccountSettingsPage.js",["86","87","88","89","90"],"import React from 'react';\nimport PlatformCard from '../components/PlatformCard'\nimport {Form, Button} from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { useForm } from '../util/hooks';\nimport gql from 'graphql-tag';\n\n\nfunction AccountSettingsPage(props) {\n\n    var username = props.match.params.username\n    console.log(useQuery(FETCH_USER_QUERY, {\n        variables: {\n            username: username\n        }\n    }));\n    const {loading, data} = useQuery(FETCH_USER_QUERY, {\n        variables: {\n            username: username\n        }\n    });\n    if (loading) {return \"loading\"}\n    else {\n        console.log(data);\n        const user = data.getUser\n\n    let userText\n    if (!user) {\n        userText = <p>Loading user...</p>\n    } else {\n\n        userText = (\n            <p> User Found</p>\n        )\n    }\n    return (\n            <div>\n                <div className=\"form-container\">\n                <h4>Account Settings</h4>\n                <p>Personal Information</p>\n                <Form noValidate>\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control \n                        type=\"text\" \n                        placeholder={user.name}\n                        // onChange = {handleChange}\n                        name = \"name\"/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"name\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\"  \n                        placeholder={user.username}\n                        // onChange = {handleChange}\n                        name = \"username\"/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"name\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"text\"  \n                        value={user.email}\n                        // onChange = {handleChange}\n                        name = \"email\"/>\n                    </Form.Group>\n\n                    <Button>Change password</Button>\n                    <p></p>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Save changes\n                    </Button>\n                </Form>\n            </div>\n            </div>\n        );\n    }\n    \n}\n    \n\nexport default AccountSettingsPage;\n\nconst FETCH_USER_QUERY = gql`\n    query($username: String!) {\n        getUser(username: $username) \n        {\n            username\n            email\n            name\n            createdPlatforms\n            playedPlatforms\n            bookmarkedPlatforms\n        }\n    }\n`\n\nconst EDIT_USER = gql`\n    mutation saveChanges(\n        $username: String!\n        $name: String!\n    ) {\n        saveChanges(\n            username: $username\n            email: $email\n            name: $name\n            password: $password\n        ) {\n            username\n            email\n            name\n            token\n        }\n    }\n`","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/SignUpPage.js",["91","92","93"],"import React, {useContext, useState} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag'\nimport { useForm } from '../util/hooks';\nimport { AuthContext } from '../context/auth'\nfunction SignUpPage(props) { \n    const context = useContext(AuthContext);\n    const [ errors, setErrors ] = useState({});\n\n    const { handleChange, onSubmit, values} = useForm(signupUser, {\n        username:'',\n        email:'',\n        name:'',\n        password:''\n    })\n\n    const [addUser, {loading}] = useMutation(REGISTER_USER, {\n        update(proxy, result) {\n            context.login(result.data.createUser);\n            props.history.push('/')\n        },\n        onError(err) {\n            // setErrors(err.graphQLErrors[0].extensions.exception.errors)\n            console.log(err)\n        },\n        variables: {\n            username: values.username,\n            email: values.email,\n            name: values.name, \n            password: values.password\n        }\n    })\n\n    function signupUser() {\n        addUser();\n    }\n\n    return (\n        <div className=\"form-container\">\n            <h1>Sign Up Page</h1>\n            <p>Welcome to Brainiac! Sign up below to begin.</p>\n            <Form onSubmit={onSubmit} noValidate>\n                <Form.Group controlId=\"email\">\n                    {/* <Form.Label>Email address</Form.Label> */}\n                    <Form.Control \n                    type=\"email\" \n                    placeholder=\"Email\" \n                    onChange = {handleChange}\n                    name = \"email\"/>\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text> */}\n                </Form.Group>\n\n                <Form.Group controlId=\"name\">\n                    {/* <Form.Label>Email address</Form.Label> */}\n                    <Form.Control type=\"text\"  \n                    placeholder=\"Name\" \n                    onChange = {handleChange}\n                    name = \"name\"/>\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text> */}\n                </Form.Group>\n\n                <Form.Group controlId=\"username\">\n                    {/* <Form.Label>Email address</Form.Label> */}\n                    <Form.Control type=\"text\" \n                     placeholder=\"Username\" \n                     onChange = {handleChange}\n                     name = \"username\"/>\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text> */}\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    {/* <Form.Label>Password</Form.Label> */}\n                    <Form.Control type=\"password\" \n                    placeholder=\"Password\"\n                    onChange = {handleChange}\n                    name = \"password\"/>\n                </Form.Group>\n                {/* <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group> */}\n                <Button variant=\"primary\" type=\"submit\">\n                    Sign Up\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nconst REGISTER_USER = gql`\n    mutation createUser(\n        $username: String!\n        $email: String!\n        $name: String!\n        $password: String!\n    ) {\n        createUser(\n            username: $username\n            email: $email\n            name: $name\n            password: $password\n        ) {\n            username\n            email\n            name\n            token\n        }\n    }\n`\n\nexport default SignUpPage;","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/context/auth.js",[],"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/HomePage.js",["94","95"],"import React from 'react';\nimport PlatformCard from '../components/PlatformCard'\nimport {Jumbotron, Card, Button} from 'react-bootstrap';\nfunction HomePage() {\n    return (\n        <div>\n            <Jumbotron Fluid style={{height: 350, backgroundColor: '#f9d29d', backgroundImage: 'linear-gradient(315deg, #f9d29d 0%, #ffd8cb 74%)'}}>\n                <h1>Build Your Own Learning Tools</h1>\n                <p>Create and customize simple games for a learning experience catered to you</p>\n                <Button variant=\"dark\">Get Started</Button>\n            </Jumbotron>\n            <Jumbotron Fluid style={{backgroundColor: '#b8c6db', backgroundImage: 'linear-gradient(315deg, #b8c6db 0%, #f5f7fa 74%)'}}> \n                <h1 style={{textAlign: \"center\"}}>Explore Games</h1>\n                <p style={{textAlign: \"center\"}}>Play games created by other users</p>\n            </Jumbotron>\n        </div>\n    );\n}\n\nexport default HomePage;","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/LoginPage.js",["96","97","98"],"import React, {useContext, useState} from 'react';\nimport {Form, Button, Modal} from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag'\nimport { AuthContext } from '../context/auth'\n\nimport  { useForm } from '../util/hooks';\n\n\nfunction LoginPage(props) { \n    const context = useContext(AuthContext);\n    const [ errors, setErrors ] = useState({});\n    const [valid, validate] = useState(false);\n    const { handleChange, onSubmit, values } = useForm(loginUserCallback, {\n        email: '',\n        password: ''\n    }) \n    const handleClose = () => validate(false);\n    const handleShow = () => validate(true);\n\n    const [loginUser, {loading}] = useMutation(LOGIN_USER, {\n        update(proxy, result) {\n            console.log(result);\n            context.login(result.data.login);\n            props.history.push('/');\n         },\n        onError(err) {\n            handleShow();\n            console.log(values)\n        },\n        variables: {\n            email: values.email,\n            password: values.password\n        }\n    })\n\n    function loginUserCallback() {\n        loginUser()\n    }\n\n    \n    return (\n        <div className=\"form-container\">\n            <h1>Login Page</h1>\n            <p>Welcome back! Log in below to begin.</p>\n            <Form onSubmit={onSubmit} noValidate>\n                <Form.Group controlId=\"email\">\n                    {/* <Form.Label>Email address</Form.Label> */}\n                    <Form.Control \n                    type=\"email\" \n                    placeholder=\"Email\" \n                    onChange = {handleChange}\n                    name = \"email\"/>\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text> */}\n                </Form.Group>\n\n                 <Form.Group controlId=\"password\">\n                     {/* <Form.Label>Password</Form.Label> */}\n                     <Form.Control type=\"password\" \n                    placeholder=\"Password\"\n                    onChange = {handleChange}\n                    name = \"password\"/>\n                </Form.Group>\n                {/* <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group> */}\n                <Button variant=\"primary\" type=\"submit\">\n                    Login\n                </Button>\n            </Form>\n            <Modal show={valid} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Incorrect username or password</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Forgot your password?\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick = {handleClose}> Forgot Password</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n}\n\nconst LOGIN_USER = gql`\n    mutation login(\n        $email: String!\n        $password: String!\n    ) {\n        login(\n            email: $email\n            password: $password\n        ) {\n            username\n            token\n        }\n     }\n `\n\nexport default LoginPage;","/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/components/NavBar.js",["99","100","101","102"],"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/components/PlatformCard.js",[],"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/util/hooks.js",[],"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/CreatePlatformPage.js",["103","104","105","106"],"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/PlatformPage.js",[],"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/ExplorePage.js",["107"],"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/pages/GamePage.js",["108","109"],"/Users/josephdeguzman/Documents/CSE/brainiac-react-app/src/components/GameCard.js",["110"],{"ruleId":"111","severity":1,"message":"112","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"115","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":11},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"111","severity":1,"message":"120","line":1,"column":16,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"121","line":28,"column":9,"nodeType":"113","messageId":"114","endLine":28,"endColumn":17},{"ruleId":"111","severity":1,"message":"122","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":20},{"ruleId":"111","severity":1,"message":"123","line":4,"column":20,"nodeType":"113","messageId":"114","endLine":4,"endColumn":31},{"ruleId":"111","severity":1,"message":"124","line":5,"column":10,"nodeType":"113","messageId":"114","endLine":5,"endColumn":17},{"ruleId":"111","severity":1,"message":"121","line":32,"column":9,"nodeType":"113","messageId":"114","endLine":32,"endColumn":17},{"ruleId":"111","severity":1,"message":"125","line":97,"column":7,"nodeType":"113","messageId":"114","endLine":97,"endColumn":16},{"ruleId":"111","severity":1,"message":"126","line":9,"column":13,"nodeType":"113","messageId":"114","endLine":9,"endColumn":19},{"ruleId":"111","severity":1,"message":"127","line":9,"column":21,"nodeType":"113","messageId":"114","endLine":9,"endColumn":30},{"ruleId":"111","severity":1,"message":"128","line":18,"column":22,"nodeType":"113","messageId":"114","endLine":18,"endColumn":29},{"ruleId":"111","severity":1,"message":"122","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":20},{"ruleId":"111","severity":1,"message":"129","line":3,"column":20,"nodeType":"113","messageId":"114","endLine":3,"endColumn":24},{"ruleId":"111","severity":1,"message":"126","line":12,"column":13,"nodeType":"113","messageId":"114","endLine":12,"endColumn":19},{"ruleId":"111","severity":1,"message":"127","line":12,"column":21,"nodeType":"113","messageId":"114","endLine":12,"endColumn":30},{"ruleId":"111","severity":1,"message":"128","line":21,"column":24,"nodeType":"113","messageId":"114","endLine":21,"endColumn":31},{"ruleId":"111","severity":1,"message":"130","line":5,"column":3,"nodeType":"113","messageId":"114","endLine":5,"endColumn":14},{"ruleId":"111","severity":1,"message":"131","line":6,"column":3,"nodeType":"113","messageId":"114","endLine":6,"endColumn":7},{"ruleId":"111","severity":1,"message":"132","line":7,"column":3,"nodeType":"113","messageId":"114","endLine":7,"endColumn":9},{"ruleId":"111","severity":1,"message":"133","line":8,"column":3,"nodeType":"113","messageId":"114","endLine":8,"endColumn":14},{"ruleId":"111","severity":1,"message":"122","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":20},{"ruleId":"111","severity":1,"message":"134","line":4,"column":10,"nodeType":"113","messageId":"114","endLine":4,"endColumn":18},{"ruleId":"111","severity":1,"message":"135","line":11,"column":19,"nodeType":"113","messageId":"114","endLine":11,"endColumn":25},{"ruleId":"111","severity":1,"message":"128","line":21,"column":26,"nodeType":"113","messageId":"114","endLine":21,"endColumn":33},{"ruleId":"111","severity":1,"message":"136","line":6,"column":10,"nodeType":"113","messageId":"114","endLine":6,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":9,"column":30,"nodeType":"139","messageId":"140","endLine":9,"endColumn":36},{"ruleId":"141","severity":1,"message":"142","line":17,"column":17,"nodeType":"143","endLine":20,"endColumn":19},{"ruleId":"137","severity":1,"message":"138","line":11,"column":30,"nodeType":"139","messageId":"140","endLine":11,"endColumn":36},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'App' is defined but never used.","no-native-reassign",["144"],"no-negated-in-lhs",["145"],"'useContext' is defined but never used.","'userText' is assigned a value but never used.","'PlatformCard' is defined but never used.","'useMutation' is defined but never used.","'useForm' is defined but never used.","'EDIT_USER' is assigned a value but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'loading' is assigned a value but never used.","'Card' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'useQuery' is defined but never used.","'logout' is assigned a value but never used.","'stripIgnoredCharacters' is defined but never used.","no-dupe-keys","Duplicate key 'gameID'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]